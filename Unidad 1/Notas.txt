(load "direcci√≥n")

(setq a '(+ 3 2))
a
(eval a)

(cons 'a '(b c d))

(setq a '(1 2 3 4))

(car a)

(cdr a)

(cddr a)

(cdddr a)

(setq a '((1 2 3) a b c))

(car a)

(caar a)

(setq b '(1 2 3 4 (a b c) (c d e)))

(setq c '((((a b c) 5) 6) 7 (8 9 10)))

(cons '(+ 2 2) 'nil) ; Para unir listas y que no se evaluen

(defparameter *nodes* '
((living-room(You are in the living-room. a wizard is snoring loudly on the couch.))
(garden (You are in a beatiful garden. there is a well))))

(assoc 'garden *nodes*)